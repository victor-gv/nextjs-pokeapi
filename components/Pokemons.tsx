import React from "react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

interface PokemonResults {
  pokemon: [{ name: string; url: string }];
  types: [
    {
      id: number;
      types: string[];
    }
  ];
}

const Pokemons = (pokemon: PokemonResults) => {
  function getType(id: number) {
    const type = pokemon.types.find((type) => type.id === id);
    const typeColor = type?.types;
    return typeColor;
  }


  const pokemonList = pokemon.pokemon;

  return (
    <>
      <Head>
        <title>Pokemon API NextJS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Head>
        <title>Pokemon API NextJS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-gray-800">
        <h1 className="flex justify-center pt-10 mb-5 font-bold font-luckiest text-6xl text-yellow-300 title ">
          Pok√©dex
        </h1>
        <div className="flex flex-wrap justify-center mx-10 bg-bg-main">
          {pokemonList.map((pokemon: { name: string; url: string }) => {
            const pokemonId: number = parseInt(pokemon.url.split("/")[6]);
            const imageUrl: string = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemonId}.png`;
            return (
              <Link key={pokemon.name} href={`/pokemon/${pokemon.name}`}>
                <div
                  key={pokemon.name}
                  className={`flex flex-col justify-center items-center pokemon-card hover:scale-105 bg-${getType(
                    pokemonId
                  )?.at(0)}`}
                >
                  <div className="mb-1">
                    <Image
                      src={imageUrl}
                      alt={pokemon.name}
                      width={100}
                      height={100}
                    />
                  </div>
                  <div className="circle"></div>
                  <h5 className="poke-id">#{pokemonId}</h5>
                  <h5 className="poke-name">
                    {pokemon.name[0].toUpperCase() + pokemon.name.slice(1)}
                  </h5>
                  <span>
                    <h5 className="poke-type capitalize">
                      {getType(pokemonId)
                        ?.join(" / ")
                        .replace(/\b\w/g, (ch) => ch.toUpperCase())}
                    </h5>
                  </span>
                </div>
              </Link>
            );
          })}
        </div>
      </div>
    </>
  );
};

export default Pokemons;
